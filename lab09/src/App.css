body {
  margin: 0; /* Remove default body margin */
  font-family: sans-serif;
  min-height: 100vh; /* Ensure body takes at least full viewport height */
  display: grid; /* Use Grid on the body to control the main app-container if needed, or just the container directly */
  grid-template-rows: 1fr; /* Simple single row for the main container */
}

.app-container {
  display: grid;
  /* Define grid rows: auto for header/footer based on content, 1fr for the main area to take remaining space */
  grid-template-areas:
    "header"                   /* Top row for the header */
    "top-background-section"   /* Second row for the section with the background image */
    "content-section"          /* Third row for the content grid */
    "footer"; 
  grid-template-rows: auto 1fr auto; /* Header height, Main Area height (flexible), Footer height */
  width: 100%; /* Container takes full width */
  min-height: 100vh; /* Ensure container takes at least full viewport height */
}

.header {
  grid-area: header; /* Assign to header grid area */
  width: 100%; /* Ensure it takes full width of its grid area */
  background-color: #4CAF50; /* Arbitrary Green */
  color: white;
  padding: 20px;
  text-align: center;
  box-sizing: border-box; /* Include padding in element's total width */
}

.top-section-background {
  grid-area: top-background-section; /* Place this section in the correct area */
  width: 100%; /* Ensure it spans the full width */
  /* Keep background-image, padding, min-height, flex centering styles here */
   background-image: url('./assets/cooking-background.jpg'); /* *** IMPORTANT: Check the path *** */
   background-size: cover;
   background-position: center;
   background-repeat: no-repeat;
   min-height: 500px;
   padding: 60px 20px;
   box-sizing: border-box;
   display: flex;
   justify-content: center;
   align-items: center;
   position: relative;
   z-index: 0;
}

.recipe-card {
  width: 100%; /* Takes full width of the flex container */
  background-color: #ffeb3b; /* Arbitrary Yellow */
  padding: 20px;
  box-sizing: border-box;
  text-align: center;
  /* Optional: Set a fixed height or min-height for visualization */
  min-height: 200px;
}

.content {
  width: 100%; /* Takes full width of the flex container */
  grid-area: content-section;
  background-color: #2196F3; /* Arbitrary Blue */
  color: white;
  padding: 20px;
  box-sizing: border-box;
  text-align: center;
  /* Optional: Set a fixed height or min-height for visualization */
  min-height: 300px;
}

.footer {
  grid-area: footer; /* Assign to footer grid area */
  width: 100%; /* Ensure it takes full width */
  background-color: #333; /* Arbitrary Dark Grey */
  color: white;
  padding: 20px;
  text-align: center;
  box-sizing: border-box;
}



/* HEADER ******************************************************************************************/

/* --- Header Styles --- */
.header {
  width: 100%;
  display: flex; /* Use Flexbox to arrange main header sections horizontally */
  justify-content: space-between; /* Space out the left, middle, and right sections */
  align-items: center; /* Vertically align items in the center */
  padding: 8px 20px; /* Padding around the header content */
  background-color: #fff; /* White background */
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.08); /* Subtle shadow at the bottom */
  box-sizing: border-box; /* Include padding in the element's total width */
}

.header-left {
  display: flex; /* Use Flexbox to arrange logo and title */
  align-items: center; /* Vertically align logo and title */
  gap: 8px; /* Space between logo and title */
  flex-shrink: 0; /* Prevent this section from shrinking */
}

.logo {
  font-size: 2.2em; /* Size of the logo icon/text */
  color: #e91e63; /* Pink color */
  line-height: 1; /* Control vertical spacing for the icon */
}

.site-title {
  font-size: 1.6em; /* Font size for the site title */
  font-weight: 700; /* Bold font weight */
  color: #e91e63; /* Pink color */
  user-select: none; /* Prevent text selection */
}

.header-middle {
  flex-grow: 1; /* Allow the search bar area to take up available space */
  margin: 0 25px; /* Horizontal margins */
  max-width: 600px; /* Maximum width for the search bar container */
}

.search-bar {
  display: flex; /* Use Flexbox to arrange input and icon */
  align-items: center; /* Vertically align input and icon */
  border: none; /* No visible border as per template */
  border-radius: 25px; /* Rounded corners */
  padding: 8px 20px; /* Padding inside the search bar */
  background-color: #f5f5f5; /* Light grey background */
}

.search-bar input[type="text"] {
  border: none; /* Remove default input border */
  outline: none; /* Remove outline on focus */
  flex-grow: 1; /* Input field takes available space */
  background-color: transparent; /* Transparent background */
  padding: 0; /* Remove default input padding */
  font-size: 1em;
  color: #555; /* Darker text color for input */
}

/* Style for placeholder text */
.search-bar input::placeholder {
  color: #aaa; /* Light grey color for placeholder */
  font-style: italic; /* Italic style for placeholder */
}

.search-icon {
  background: none; /* No background */
  border: none; /* No border */
  cursor: pointer; /* Indicate it's clickable */
  font-size: 1em; /* Size of the search icon */
  color: #888; /* Grey color for the icon */
  padding-left: 10px; /* Space between input text and icon */
}

.header-right {
  display: flex; /* Use Flexbox to arrange navigation and buttons */
  align-items: center; /* Vertically align navigation and buttons */
  gap: 25px; /* Space between navigation and button group */
  flex-shrink: 0; /* Prevent this section from shrinking */
}

.navigation ul {
  list-style: none; /* Remove default list bullets */
  margin: 0; /* Remove default margin */
  padding: 0; /* Remove default padding */
  display: flex; /* Use Flexbox to arrange list items (links) */
  gap: 20px; /* Space between navigation links */
}

.navigation li {
  display: inline-block; /* Display list items horizontally (alternative to flex on ul) */
}

.navigation a {
  text-decoration: none; /* Remove underline from links */
  color: #555; /* Dark grey text for links */
  font-size: 0.95em; /* Font size for links */
  font-weight: 400; /* Normal font weight */
  transition: color 0.3s ease; /* Smooth color transition on hover */
}

.navigation a:hover {
  color: #e91e63; /* Pink color on hover */
}

.auth-buttons {
  display: flex; /* Use Flexbox to arrange buttons */
  gap: 10px; /* Space between buttons */
}

.login-button,
.subscribe-button {
  padding: 10px 18px; /* Padding inside buttons */
  border: none; /* Remove border */
  border-radius: 25px; /* Rounded corners */
  cursor: pointer; /* Indicate it's clickable */
  font-size: 0.95em; /* Font size for buttons */
  font-weight: 600; /* Semi-bold font weight */
  transition: background-color 0.3s ease, opacity 0.3s ease; /* Smooth transitions */
}

.login-button {
  background-color: #fce4ec; /* Very light pink background */
  color: #e91e63; /* Pink text */
}

.login-button:hover {
  background-color: #f8bbd0; /* Slightly darker light pink on hover */
}

.subscribe-button {
  background-color: #e91e63; /* Pink background */
  color: white; /* White text */
}

.subscribe-button:hover {
  background-color: #d81b60; /* Slightly darker pink on hover */
  opacity: 0.9; /* Subtle opacity change on hover */
}
/* TOP SECTION ***********************************************************************************************************/

/* --- New Container Styles for Background Image --- */
.top-section-background {
  width: 100%;
  /* Add padding to create space around the content (RecipeCard) */
  padding: 60px 20px; /* Adjust padding top/bottom as needed based on visual */
  box-sizing: border-box;

  /* --- Background Image Styles (applied here) --- */
  background-image: url('/Image 73.png'); /* <-- *** IMPORTANT: Replace with the actual path to your image file *** */
  background-size: cover; /* Cover the area */
  background-position: center; /* Center the image */
  background-repeat: no-repeat; /* No repeat */
  /* background-attachment: fixed; */ /* Optional: fixed background */

  /* Add a minimum height to ensure the background is visible */
  min-height: 500px; /* Adjust based on the height needed to show the image */

  /* Use Flexbox or Grid to center/position content within this section */
  display: flex;
  justify-content: center; /* Center content horizontally */
  align-items: center; /* Center content vertically */
  flex-direction: column; /* Stack items vertically if needed */

  position: relative; /* Needed for overlay */
  z-index: 0; /* Ensure content above is visible */
}

/* Optional: Add the overlay again for readability */
.top-section-background::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, 0.3); /* Dark semi-transparent overlay */
    z-index: -1; /* Position behind the content */
}




/* RECIPECARD  ******************************************************************************************************/
/* --- RecipeCard Styles --- */

/* Container to help position the card - adjust as needed for overall layout */
.recipe-card-container {
  /* If placed in a flex/grid parent, you can center it like this: */
  /* display: flex; */
  /* justify-content: center; */
  /* Or align-items: center; depending on parent direction */

  /* If not centering, it will align to the left by default */
  width: 100%; /* Take full width of parent container */
  padding: 20px 0; /* Example padding */
  box-sizing: border-box;
}


.recipe-card {
position: relative; /* Needed for absolute positioning of the label */
width: 90%; /* Example width, adjust as needed */
max-width: 400px; /* Maximum width as seen in the template */
background-color: #fff; /* White background */
border-radius: 15px; /* Rounded corners */
box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1); /* Subtle shadow */
overflow: visible; /* Allow the absolute positioned label to be visible outside */
margin: 0 auto; /* Center the card if container allows */
/* If using a flex parent for centering, margin: auto 0; might be needed */
}

.recipe-label {
position: absolute;
top: -15px; /* Position above the card */
left: 20px; /* Position from the left */
background-color: #ffc107; /* Yellow background color */
color: #333; /* Dark text color */
padding: 5px 15px;
border-radius: 8px; /* Rounded corners for the label */
font-size: 0.9em;
font-weight: bold;
text-transform: uppercase;
z-index: 1; /* Ensure label is above the card */
}

.card-content {
display: flex; /* Use Flexbox to stack internal elements */
flex-direction: column; /* Stack elements vertically */
padding: 30px 20px 20px 20px; /* Add padding inside the card, more at the top to accommodate label */
gap: 15px; /* Space between content sections */
}

.recipe-title {
font-size: 1.5em;
color: #333;
margin: 0; /* Remove default margin */
}

.recipe-description {
font-size: 1em;
color: #555;
line-height: 1.5;
margin: 0; /* Remove default margin */
}

.recipe-author {
display: flex; /* Use Flexbox to arrange avatar and name */
align-items: center; /* Vertically align avatar and name */
gap: 10px; /* Space between avatar and name */
margin-top: 10px; /* Space above the author section */
}

.author-avatar {
font-size: 1.8em; /* Size of the avatar */
/* Add a circular background if needed, e.g., background-color: #eee; border-radius: 50%; padding: 5px; */
}

.author-name {
font-size: 0.9em;
color: #777;
}

.view-button {
display: inline-block; /* Ensure button respects padding and margin */
background-color: #e91e63; /* Pink color */
color: white;
padding: 10px 20px;
border: none;
border-radius: 25px; /* Rounded button */
font-size: 1em;
font-weight: bold;
cursor: pointer;
text-align: center;
margin-top: 20px; /* Space above the button */
transition: background-color 0.3s ease;
}

.view-button:hover {
background-color: #d81b60; /* Darker pink on hover */
}


/* CONTENT *************************************************************************************************************/
/* --- Content Section Styles (.content class) --- */
.content { /* Using the correct .content class */
  grid-area: content-section; /* Assigned by the main App Grid layout */
  width: 100%; /* Takes full width */
  padding: 40px 20px; /* Add padding */
  box-sizing: border-box;
  background-color: #fff; /* White background for this section */
  text-align: center; /* Center the header text */

  /* Ensure no background image here */
  background-image: none;
  background-color: #fff;
}

.content-header {
  margin-bottom: 40px; /* Space below the header text */
}

.content-title {
  font-size: 2.5em;
  color: #e91e63; /* Pink color */
  margin-bottom: 10px;
}

.content-subtitle {
  font-size: 1.2em;
  color: #555;
}

/* --- Recipes Grid Styles (Using Grid as per the image) --- */
.recipes-grid {
  display: grid; /* Use CSS Grid */
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); /* Responsive grid */
  gap: 20px; /* Space between grid items */
  max-width: 1200px; /* Optional: Limit grid width */
  margin: 0 auto; /* Center the grid */
}

/* --- Small Recipe Card Styles (within the grid) --- */
.small-recipe-card {
  background-color: #fff;
  border-radius: 10px;
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
  overflow: hidden;
  display: flex; /* Flexbox for internal stacking */
  flex-direction: column;
  text-align: left;
}

.small-card-image {
  width: 100%;
  height: 150px;
  object-fit: cover;
  border-top-left-radius: 10px;
  border-top-right-radius: 10px;
}

.small-card-info {
  padding: 15px;
  display: flex; /* Flexbox for info stacking */
  flex-direction: column;
  gap: 10px;
  flex-grow: 1;
}

.small-card-title {
  font-size: 1.1em;
  color: #333;
  margin: 0;
  font-weight: 600;
}

.small-card-meta {
  display: flex; /* Flexbox for time and save */
  justify-content: space-between;
  align-items: center;
  margin-top: auto;
}

.small-card-time {
  font-size: 0.9em;
  color: #777;
  background-color: #f5f5f5;
  padding: 3px 8px;
  border-radius: 12px;
}

.small-card-save {
  color: #e91e63;
  cursor: pointer;
}

/* PHẦN VIDEO CỦA CONTENT */

/* --- Styles cho lưới của phần Recipes With Videos --- */
.videos-recipes-grid { /* Class mới cho lưới này */
  display: grid; /* Sử dụng Grid cho cấu trúc lưới */
  /* Cột tương tự lưới trước đó, 4 cột trên màn hình rộng, tự xuống dòng */
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); /* Điều chỉnh minmax nếu cần */
  gap: 20px; /* Khoảng cách giữa các thẻ */
  max-width: 1200px; /* Điều chỉnh max width nếu cần */
  margin: 0 auto; /* Căn giữa lưới */

  /* Hoặc dùng Flexbox nếu bạn muốn bố cục flex */
  /* display: flex; */
  /* flex-wrap: wrap; */ /* Tự động xuống dòng */
  /* gap: 20px; */ /* Khoảng cách giữa các item flex */
  /* justify-content: center; */ /* Căn giữa các item trong dòng */
}

/* --- Styles cho thẻ công thức có video --- */
.video-recipe-card { /* Class mới cho loại thẻ này */
  background-color: #fff;
  border-radius: 10px;
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
  overflow: hidden;
  display: flex; /* Sử dụng Flexbox cho bố cục bên trong thẻ */
  flex-direction: column; /* Xếp ảnh và info theo cột */
  text-align: left; /* Căn text bên trong thẻ */
  /* width: 100%; */ /* Trong lưới Grid/Flex, width 100% thường ngầm định hoặc do minmax/flex-basis */
}

.video-card-image { /* Class mới cho ảnh */
  width: 100%;
  height: 180px; /* Điều chỉnh chiều cao ảnh nếu cần */
  object-fit: cover;
  border-top-left-radius: 10px;
  border-top-right-radius: 10px;
  /* Có thể thêm icon video overlay lên ảnh tại đây bằng pseudo-elements */
}

.video-card-info { /* Class mới cho phần info bên dưới ảnh */
  padding: 15px;
  display: flex; /* Flexbox cho nội dung bên trong info */
  flex-direction: column; /* Xếp title, meta theo cột */
  gap: 10px;
  flex-grow: 1; /* Cho phép phần info mở rộng */
}

.video-card-title { /* Class mới cho tiêu đề */
  font-size: 1.1em;
  color: #333;
  margin: 0;
  font-weight: 600;
}

.video-card-meta { /* Class mới cho dòng time và save */
  display: flex; /* Flexbox cho time và save */
  justify-content: space-between; /* Đẩy time sang trái, save sang phải */
  align-items: center; /* Căn giữa theo chiều dọc */
   margin-top: auto; /* Đẩy xuống cuối nếu có khoảng trống */
}

.video-card-time { /* Class mới cho time */
  font-size: 0.9em;
  color: #777;
  background-color: #f5f5f5;
  padding: 3px 8px;
  border-radius: 12px;
}

.video-card-save { /* Class mới cho save icon */
  color: #e91e63;
  cursor: pointer;
}


/* EDITOR's PICK ******************************************************************************/
/* --- Style cho Lưới Editor's Pick --- */
/* Có thể dùng lại class .recipes-grid nếu layout giống, hoặc tạo class mới nếu muốn style riêng */
/* Nếu dùng chung .recipes-grid, style này sẽ áp dụng cho cả 3 lưới nếu chúng dùng cùng class */
.editor-picks-grid { /* Có thể là .editor-picks-grid nếu bạn thêm class đó vào div lưới */
  display: grid; /* Sử dụng Grid cho cấu trúc lưới */
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); /* Điều chỉnh minmax và số cột */
  gap: 20px; /* Khoảng cách giữa các thẻ */
  max-width: 800px; /* Điều chỉnh max width dựa trên hình ảnh */
  margin: 0 auto; /* Căn giữa lưới */

   /* Nếu bạn muốn dùng Flexbox cho lưới này, thay đổi như sau: */
   /* display: flex; */
   /* flex-wrap: wrap; */
   /* gap: 20px; */
   /* justify-content: center; */
   /* align-items: flex-start; */ /* Căn trên các hàng */
}

/* --- Style cho Thẻ Công thức Editor's Pick --- */
.editor-pick-card { /* Đảm bảo class này có style */
  background-color: #fff;
  border-radius: 10px;
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
  overflow: hidden;
  display: flex; /* Flexbox cho bố cục bên trong thẻ */
  flex-direction: column;
  text-align: left;
   /* Nếu lưới dùng Flexbox, có thể cần thêm flex-basis hoặc width cho thẻ: */
   /* flex-basis: calc(50% - 10px); */ /* Ví dụ 2 cột với gap 20px */
   /* width: calc(50% - 10px); */
}

.editor-card-image {
  width: 100%;
  height: 180px; /* Điều chỉnh chiều cao ảnh */
  object-fit: cover;
  border-top-left-radius: 10px;
  border-top-right-radius: 10px;
}

.editor-card-info {
  padding: 15px;
  display: flex;
  flex-direction: column;
  gap: 10px;
  flex-grow: 1;
}

.editor-card-title {
  font-size: 1.1em;
  color: #333;
  margin: 0;
  font-weight: 600;
}

.editor-card-time {
  font-size: 0.9em;
  color: #777;
  /* Style time như hình ảnh */
}

.editor-card-author {
    display: flex;
    align-items: center;
    gap: 8px;
    margin-top: 5px;
}

.author-avatar {
    width: 30px;
    height: 30px;
    border-radius: 50%;
    object-fit: cover;
}

.author-name {
    font-size: 0.9em;
    color: #555;
}


.editor-card-save {
    color: #e91e63;
    cursor: pointer;
    align-self: flex-end; /* Đẩy icon save xuống cuối nếu dùng Flexbox column cho info */
     margin-top: -30px; /* Kéo icon lên nếu cần */
}


/* FOOTER *******************************************************************************************************/
/* --- Footer Styles --- */
.footer {
  grid-area: footer; /* Assigned by the main App Grid layout */
  width: 100%; /* Takes full width */
  background-color: #212121; /* Dark background color */
  color: #ccc; /* Light grey text color for general text */
  padding: 40px 20px 20px 20px; /* Padding around the footer content */
  box-sizing: border-box;
  display: flex; /* Use Flexbox to stack main content and bottom row */
  flex-direction: column;
  align-items: center; /* Center content horizontally if narrower than 100% */
}

.footer-content { /* Container for the main 3 column sections */
  display: grid; /* Use Grid for the column layout */
  /* Define columns: about takes more space, others take equal fractions */
  grid-template-columns: 2fr 1fr 1fr 1fr; /* Example: 4 columns, first is wider */
  gap: 40px; /* Space between columns */
  max-width: 1200px; /* Optional: Limit the max width of the footer content */
  width: 100%; /* Ensure the grid container takes full width up to max-width */
  margin-bottom: 30px; /* Space between main content and bottom row */

  /* Responsive adjustment for smaller screens */
  @media (max-width: 768px) {
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); /* Stack columns on smaller screens */
    gap: 30px;
  }
}

.footer-section h2 {
  font-size: 1.2em;
  color: #eee; /* Slightly lighter color for headings */
  margin-bottom: 15px;
  font-weight: bold;
}

.footer-about p {
  font-size: 0.95em;
  line-height: 1.5;
  margin-bottom: 20px;
}

.footer-subscribe-form {
  display: flex; /* Use Flexbox to arrange input and button */
  gap: 10px; /* Space between input and button */
}

.footer-subscribe-form input[type="email"] {
  flex-grow: 1; /* Input takes available space */
  padding: 10px 15px;
  border: none;
  border-radius: 5px;
  background-color: #333; /* Darker background for input */
  color: #eee; /* Light text color */
  font-size: 1em;
}

.footer-subscribe-form input[type="email"]::placeholder {
  color: #aaa; /* Lighter placeholder text */
}


.footer-subscribe-form button {
  padding: 10px 20px;
  background-color: #e91e63; /* Pink color */
  color: white;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  font-size: 1em;
  font-weight: bold;
  transition: background-color 0.3s ease;
}

.footer-subscribe-form button:hover {
   background-color: #d81b60; /* Darker pink on hover */
}

.footer-links nav ul {
  list-style: none;
  margin: 0;
  padding: 0;
  display: flex; /* Use Flexbox to stack links vertically */
  flex-direction: column;
  gap: 10px; /* Space between links */
}

/* .footer-links nav ul li { */
  /* display: block; */ /* List items are block by default in column flex */
/* } */

.footer-links nav ul li a {
  text-decoration: none;
  color: #ccc; /* Light grey color for links */
  font-size: 0.95em;
  transition: color 0.3s ease;
}

.footer-links nav ul li a:hover {
  color: #fff; /* White color on hover */
}

/* --- Footer Bottom Row Styles --- */
.footer-bottom {
  width: 100%; /* Takes full width */
  max-width: 1200px; /* Match max-width of content */
  border-top: 1px solid #444; /* Subtle line above the bottom row */
  padding-top: 20px;
  display: flex; /* Use Flexbox to arrange items horizontally */
  justify-content: space-between; /* Space out logo/copyright and policy links */
  align-items: center; /* Vertically align items */

  /* Responsive adjustment for smaller screens */
  @media (max-width: 600px) {
     flex-direction: column; /* Stack items vertically on very small screens */
     gap: 15px;
     text-align: center; /* Center text when stacked */
  }
}

.footer-logo {
   font-size: 1.8em; /* Size of the footer logo */
   color: #e91e63; /* Pink color */
   flex-shrink: 0; /* Prevent shrinking */

   @media (max-width: 600px) {
      margin-bottom: 10px; /* Add space below logo when stacked */
   }
}

.footer-copyright {
  font-size: 0.9em;
  color: #aaa; /* Lighter grey for copyright */
   @media (max-width: 600px) {
      order: 3; /* Change order to appear last when stacked */
   }
}

.footer-policy-links {
  display: flex; /* Use Flexbox to arrange policy links */
  gap: 15px; /* Space between policy links */
  flex-shrink: 0; /* Prevent shrinking */

   @media (max-width: 600px) {
     justify-content: center; /* Center links when stacked */
     margin-top: 10px; /* Add space above links when stacked */
   }
}

.footer-policy-links a {
   text-decoration: none;
   color: #ccc; /* Light grey color */
   font-size: 0.9em;
   transition: color 0.3s ease;
}

.footer-policy-links a:hover {
   color: #fff; /* White color on hover */
}